plugins {
    id 'java-library'
    id 'application'
    id 'io.qameta.allure' version '2.8.1'
    id 'com.adarshr.test-logger' version '2.1.1'
}

group 'qa.guru'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def
        allureVersion = "2.13.8",
        junitVersion = "5.7.0",
        selenideVersion = "5.20.0"

dependencies {
    testImplementation("com.codeborne:selenide:$selenideVersion",
            "com.github.tomakehurst:wiremock:2.27.2",
            "org.aspectj:aspectjweaver:1.9.6",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.assertj:assertj-core:3.17.1",
            "org.slf4j:slf4j-simple:1.7.29",
            "org.aeonbits.owner:owner:1.0.12",
            "com.codeborne:pdf-test:1.6.1",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {

    systemProperties += System.properties
    System.setProperty("chromeoptions.prefs", "intl.accept_languages=en")
    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testlogger {
        theme 'mocha-parallel' // task level
        showStandardStreams true
        showPassedStandardStreams false
        showSkippedStandardStreams false
        showFailedStandardStreams true
    }
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}

task web(type: Test) {
    useJUnitPlatform {
        includeTags 'web'
    }
}
